#test descriptions for chow allocator
require 'tests/paths'

#---------------------- REG=32 ---------------------------#
expand HCT do |path|
  #single register set
  test path, :args => '-r32 -p -m'

  #agressive basic block splitting
  test path, :args => '-r32 -b3'

  #easier basic block length
  test path, :args => '-r32 -b10'

  #enhanced code motion
  test path, :args => '-r32 -b5 -e'
end

#---------------------- REG=16 ---------------------------#
expand HCT do |path|
  #agressive basic block splitting
  test path, :args => '-r16 -b3',
       :skip => [:doduc, :fpppp, :rkf45, :wave5X]

  #easier basic block length
  test path, :args => '-r16 -b10',
       :skip => [:doduc, :fpppp, :rkf45, :wave5X]

  #enhanced code motion
  test path, :args => '-r16 -b5 -ef'
end

#------------------ MINIMUM REG (>16) ---------------------#
['-b3', '-b10'].each do |a|
  test DODUC,  :args => '-r19 '+a, :comment => 'lowest reg < 32'
  test FPPPP,  :args => '-r27 '+a, :comment => 'lowest reg < 32'
  test RKF45,  :args => '-r24 '+a, :comment => 'lowest reg < 32'
  test WAVE5X, :args => '-r25 '+a, :comment => 'lowest reg < 32'
end

#----------------------- REG=1 ----------------------------#
expand HCT do |path|
  #stress test by allocating using the minimum number of registers
  test path, :args => '-r1 -b2 -e -f'
end

#----------------- REMATERIALIZATION ---------------------#
expand HCT do |path|
  test path, :args => '-r32 -b15 -e -f -z'
  test path, :args => '-r16 -b5 -e -f -z'
end

#----------------- EXPECTED FAILURES  ---------------------#
test DODUC, :args => '-r32 -b3 -p', 
            :expected => :XFAIL,
            :comment => 'i2c failure for phi node with two types'

